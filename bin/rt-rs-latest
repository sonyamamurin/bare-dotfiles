#!/usr/bin/env bash

## Script to list most recent files in specific directory (var sourceDir) and
## pick one to download with rsyclnc to specific directory (var targetDir)
##
## Reason for creation? lftp got moved to homebrew/boneyard so I thought I
## should switch to rsync instead. This is a recreation of my lftp workflow.

clRed='\033[0;31m'
clCyan='\033[0;36m'
clYellow='\033[0;33m'
clNoColor='\033[0m'

sourceDir=$SSH1_USER@$SSH1_URL:$SSH1_RTORRENT_DATA
targetDir=$LOCAL_TARGET

finished=false

## https://stackoverflow.com/a/11562762
ssh -o "BatchMode=yes" "$SSH1_USER@$SSH1_URL" "echo 2>&1" || { echo "Cannot connect to $SSH1_URL" ; exit 1 ; }

hash rsync >/dev/null 2>&1 || { echo "Rsync required but not found." ; exit 1 ; }

while ! $finished ; do

	read -er -p "How many recent files would you like to see? [20]: " tail

	if [[ "$tail" == "" ]] ; then
		tail=20
		finished=true
	elif [[ "$tail" =~ ^[0-9]+$ ]] ; then
		finished=true
	else
		echo "Sorry integers only."
	fi

done

echo -e "\n${clRed}$tail${clNoColor} newest files in of ${clCyan}$sourceDir${clNoColor}\n"

# Back up IFS
oldIFS=$IFS

# Change how new line is read
IFS='
'

# Get file list from server. Yes, I have read http://mywiki.wooledge.org/ParsingLs
fileList=($(ssh -t "$SSH1_USER"@"$SSH1_URL" "/bin/ls -1tr $SSH1_RTORRENT_DATA | tail -n$tail"))

# Reset IFS
IFS=$oldIFS

# j is the users choice, starts at 1 in contrast to the array
j=1

for i in "${fileList[@]}" ; do
	# Tidier row (extra whitespace when <10)
	if (( j < 10 ))
	then
		echo -e " ${clYellow}$j.${clNoColor} $i"
	else
		echo -e "${clYellow}$j.${clNoColor} $i"
	fi

	((j++))

done

echo

finished=false

u=0

while ! $finished ; do

	read -er -p "Enter index of files to download, q when finished: " fileChoice

	if [[ "$fileChoice" = "q" ]] ; then
		finished=true
	elif ! [[ "$fileChoice" =~ ^[0-9]+$ ]] ; then
		echo "Sorry integers only"
	elif (( fileChoice > tail || fileChoice < 1 ))
	then
		echo "Number needs to be between 1 and $tail"
	else
		# Account for zero index in array
		((fileChoice--))
		downloadSelection[$u]=$fileChoice
		((u++))
	fi

done

# https://stackoverflow.com/questions/15520339/how-to-remove-carriage-return-and-newline-from-a-variable-in-shell-script

for z in "${downloadSelection[@]}" ; do

	toDownload="$(echo "${fileList[$z]}" | tr -d '\r')"
	echo "$toDownload"

	rsync -rhvz "$sourceDir/'$toDownload'" --progress "$targetDir"

done

exit 0
